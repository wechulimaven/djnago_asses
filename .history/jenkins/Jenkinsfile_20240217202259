pipeline {
    agent any
    
    environment {
        DOCKER_CREDENTIALS_ID = '**********' // ID of Docker Hub credentials in Jenkins
        GIT_CREDENTIALS_ID = '**********' // ID of Git credentials in Jenkins
        KUBERNETES_CREDENTIALS_ID = '**********' // ID of Kubernetes credentials in Jenkins
    }
    
    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'GIT_CREDENTIALS_ID', url: 'https://github.com/wechulimaven/shop_asses.git'
            }
        }
        
        stage('Build and Test') {
            steps {
                sh 'make build_and_run_tests' //  Command to build and run tests
            }
        }
        
        stage('Build and Push Docker Image') {
            steps {
                script {
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'DOCKER_CREDENTIALS_ID', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD']]) {
                        sh 'docker build -t shop_asses .'
                        sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                        sh 'docker tag shop_asses $DOCKER_USERNAME/shop_asses'
                        sh 'docker push $DOCKER_USERNAME/shop_asses'
                    }
                }
            }
        }
        
        stage('Deploy with Ansible') {
            steps {
                script {
                    sh 'ansible-playbook -i inventory/hosts ansible/deploy.yml'
                }
            }
        }
        
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'KUBERNETES_CREDENTIALS_ID', usernameVariable: 'KUBERNETES_USERNAME', passwordVariable: 'KUBERNETES_PASSWORD')]) {
                        sh "kubectl config set-credentials user --username=${KUBERNETES_USERNAME} --password=${KUBERNETES_PASSWORD}"
                        sh "kubectl apply -f kubernetes/deployment.yaml"
                        sh "kubectl apply -f kubernetes/service.yaml"
                    }
                }
            }
        }
    }
    
    post {
        failure {
            echo 'Pipeline failed: Tests did not pass.'
            currentBuild.result = 'FAILURE'
        }
        success {
            echo 'Pipeline succeeded!'
        }
    }
}
